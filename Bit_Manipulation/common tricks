n & (n - 1)     used to set rightmost "1" digit to "0" / used to check if n is power of 2; unset rightest bit of 1

n & (-n)        used to keep the rightmost "1" digit(保留最后的一个 1);  separate rightest bit of 1

n + n & (-n)    将最右的1 向左移动1位;

n & (~ (1 << i))  将第i位清零;

n | (1 << i)     将第i位置1;
